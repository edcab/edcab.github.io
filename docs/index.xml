<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Edwin&#39;s Blog</title>
    <link>https://edwincabezas.dev/</link>
    <description>Recent content on Edwin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Apr 2021 08:06:25 +0600</lastBuildDate><atom:link href="https://edwincabezas.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Search Results</title>
      <link>https://edwincabezas.dev/search/</link>
      <pubDate>Tue, 08 Jun 2010 08:06:25 +0600</pubDate>
      
      <guid>https://edwincabezas.dev/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description>
    </item>
    
    <item>
      <title>Handling objects creating with Factory method</title>
      <link>https://edwincabezas.dev/posts/golang/design-patterns/factory-method/</link>
      <pubDate>Thu, 08 Apr 2021 08:06:25 +0600</pubDate>
      
      <guid>https://edwincabezas.dev/posts/golang/design-patterns/factory-method/</guid>
      <description>Factory Method Is a pattern of type creational that delegates the construction of objects to an interface. The interface has a method that return a type of specific object.
Problem The company TransportPassengers has to transport many passengers after your workday.
Solution First of all, we have to create our factory:
func GetTransportType(quPassengers int) (product.ITransport, error) { if quPassengers &amp;gt;= 1 &amp;amp;&amp;amp; quPassengers &amp;lt;=5 { return concrete.NewTaxi(), nil } if quPassengers &amp;gt;= 6 &amp;amp;&amp;amp; quPassengers &amp;lt;=15 { return concrete.</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://edwincabezas.dev/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://edwincabezas.dev/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description>
    </item>
    
  </channel>
</rss>
